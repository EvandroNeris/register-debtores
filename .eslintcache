[{"C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\App.tsx":"1","C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\index.tsx":"2","C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\components\\buttons\\button.tsx":"3","C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\views\\register\\register.tsx":"4","C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\components\\index.tsx":"5","C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\components\\container\\container.tsx":"6","C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\styles\\s.base-container.tsx":"7","C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\styles\\s.buttons.tsx":"8","C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\components\\footer\\footer.tsx":"9","C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\styles\\s.footer.tsx":"10","C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\styles\\s.row.tsx":"11","C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\components\\row\\row.tsx":"12","C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\components\\list\\list.tsx":"13","C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\styles\\s.item-list.tsx":"14","C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\services\\users.tsx":"15","C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\services\\api.tsx":"16","C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\components\\modal\\modal.tsx":"17","C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\styles\\s.modal.tsx":"18","C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\components\\modal\\modal-templates\\delete.tsx":"19","C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\components\\modal\\modal-templates\\new.tsx":"20","C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\components\\input\\input.tsx":"21","C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\styles\\s.input.tsx":"22"},{"size":265,"mtime":1612111412876,"results":"23","hashOfConfig":"24"},{"size":238,"mtime":1612117831510,"results":"25","hashOfConfig":"24"},{"size":432,"mtime":1612140151076,"results":"26","hashOfConfig":"24"},{"size":2599,"mtime":1612139689430,"results":"27","hashOfConfig":"24"},{"size":303,"mtime":1612139232500,"results":"28","hashOfConfig":"24"},{"size":401,"mtime":1612113132839,"results":"29","hashOfConfig":"24"},{"size":287,"mtime":1612114270238,"results":"30","hashOfConfig":"24"},{"size":398,"mtime":1612140628001,"results":"31","hashOfConfig":"24"},{"size":312,"mtime":1612113591963,"results":"32","hashOfConfig":"24"},{"size":480,"mtime":1612122535476,"results":"33","hashOfConfig":"24"},{"size":120,"mtime":1612114883588,"results":"34","hashOfConfig":"24"},{"size":163,"mtime":1612115043006,"results":"35","hashOfConfig":"24"},{"size":984,"mtime":1612130055115,"results":"36","hashOfConfig":"24"},{"size":480,"mtime":1612129550766,"results":"37","hashOfConfig":"24"},{"size":366,"mtime":1612134366620,"results":"38","hashOfConfig":"24"},{"size":141,"mtime":1612121219687,"results":"39","hashOfConfig":"24"},{"size":855,"mtime":1612126348559,"results":"40","hashOfConfig":"24"},{"size":1102,"mtime":1612132199866,"results":"41","hashOfConfig":"24"},{"size":838,"mtime":1612137596133,"results":"42","hashOfConfig":"24"},{"size":987,"mtime":1612140127109,"results":"43","hashOfConfig":"24"},{"size":408,"mtime":1612138836676,"results":"44","hashOfConfig":"24"},{"size":193,"mtime":1612138784285,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tb6ln9",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\App.tsx",[],"C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\index.tsx",[],[],"C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\components\\buttons\\button.tsx",[],"C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\views\\register\\register.tsx",["98","99"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Container, Footer, Row, List, Modal } from '../../components';\r\nimport { IElement } from '../../interfaces';\r\nimport { getUser, deleteUser } from '../../services/users';\r\nimport './register.css';\r\nimport _ from 'lodash';\r\nimport New from '../../components/modal/modal-templates/new';\r\nimport Delete from '../../components/modal/modal-templates/delete';\r\n\r\nfunction Register(): IElement {\r\n  const [isShown, setIsShown] = useState<boolean>(false);\r\n\r\n  const [users, setUsers] = useState<any>([]);\r\n  const [itemSelected, setItemSelected] = useState<boolean>(false);\r\n  const [nameUserSelected, setNameUserSelected] = useState<string>('');\r\n  const [content, setContent] = useState<any | null>();\r\n  const [idUser, setIdUser] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    async function loadData() {\r\n      const response = await getUser();\r\n\r\n      setUsers(response);\r\n    }\r\n    loadData();\r\n  }, []);\r\n\r\n  function onSelectItem(id: number) {\r\n    setItemSelected(!!id);\r\n    setIdUser(id);\r\n\r\n    for (const user of users) {\r\n      user['id'] === id ? setNameUserSelected(user['name']) : null;\r\n    }\r\n  }\r\n\r\n  function handleDelete() {\r\n    deleteUser(idUser);\r\n    onToggle();\r\n  }\r\n\r\n  function onToggle() {\r\n    toggle();\r\n  }\r\n\r\n  function handleModal(type: string): void {\r\n    toggle();\r\n    type == 'new' ? setContent(<New></New>) : setContent(<Delete showModal={() => onToggle()} handleDelete={handleDelete} nameUserSelected={nameUserSelected}></Delete>);\r\n  }\r\n\r\n  function toggle() {\r\n    console.log(isShown);\r\n    setIsShown(!isShown);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container width={100} height={100} backgroundColor={'#fff'}>\r\n        <Row>\r\n          <Container width={30} height={80} backgroundColor={'#fff'}>\r\n            <List data={users} click={(id: number) => onSelectItem(id)}></List>\r\n          </Container>\r\n          <Container width={70} height={80} backgroundColor={'#fff'}>\r\n            \r\n          </Container>\r\n        </Row>\r\n        <Footer width={100} height={20}>\r\n          {\r\n            itemSelected ? (<Button onClick={() => handleModal('delete')} backgroundColor={'#EF7C7C'} hoverColor={'#FAA4A4'}>Deletar</Button>) : (<div></div>)\r\n          }\r\n          <Button onClick={() => handleModal('new')} backgroundColor={'#32DE82'} hoverColor={'#5BE69B'}>Novo</Button>\r\n        </Footer>\r\n      </Container>\r\n      <Modal isShown={isShown} hide={toggle} modalContent={_.cloneDeep(content)} headerText=\"\" />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\components\\index.tsx",[],"C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\components\\container\\container.tsx",[],[],"C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\styles\\s.base-container.tsx",[],"C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\styles\\s.buttons.tsx",[],"C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\components\\footer\\footer.tsx",[],[],"C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\styles\\s.footer.tsx",[],"C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\styles\\s.row.tsx",[],"C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\components\\row\\row.tsx",[],"C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\components\\list\\list.tsx",["100"],"import React, { useState } from 'react';\r\nimport { IList } from '../../interfaces';\r\nimport { SItemList } from '../../styles/s.item-list';\r\nimport './style.css';\r\n\r\nconst List: React.FC<IList> = ({\r\n  data,\r\n  click\r\n}) => {\r\n  const [selected, setSelected] = useState(NaN);\r\n\r\n  function onSelect(id: number, index: number): void {\r\n    click(id);\r\n    setSelected(index);\r\n  }\r\n\r\n  return (\r\n    <ul className=\"height\">\r\n      {\r\n        data ? (data.map((item: any, index: number) => {\r\n          return (\r\n          <SItemList  backgroundColor={selected == index ? '#ebebeb' : '#fff'} key={index} onClick={() => onSelect(item.id, index)}>\r\n            <span>{item.name}</span> \r\n            <span className=\"circle-total\">{item.totalDebits}</span>\r\n          </SItemList>\r\n          );\r\n        })) : (\r\n          <div className=\"empty-container\">\r\n            <p>Ainda não temos clientes xD</p>\r\n          </div>\r\n        )\r\n      }\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\styles\\s.item-list.tsx",[],"C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\services\\users.tsx",["101","102"],"import api from './api';\r\n\r\nconst uuid = 'effd6407-7382-4274-85b8-5996254119b4';\r\n\r\nconst getUser = async (): Promise<any> => {\r\n  const { data } = await api.get(`/users?key=${uuid}`);\r\n  return data;\r\n};\r\n\r\nconst deleteUser = async (id: number): Promise<any> => {\r\n  return await api.delete(`/users/${id}?key=${uuid}`);\r\n}\r\n\r\nexport {\r\n  getUser,\r\n  deleteUser\r\n}\r\n","C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\services\\api.tsx",[],"C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\components\\modal\\modal.tsx",[],[],"C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\styles\\s.modal.tsx",[],"C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\components\\modal\\modal-templates\\delete.tsx",[],"C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\components\\modal\\modal-templates\\new.tsx",["103"],"import { property } from 'lodash';\r\nimport React from 'react';\r\nimport { Button } from '../..';\r\nimport Input from '../../input/input';\r\nimport './new.css';\r\n\r\nconst New: React.FC = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container-inputs\">\r\n        <Input name=\"user\" label=\"Cliente\" type=\"text\" id=\"user\" ></Input>\r\n        <br/>\r\n        <br/>\r\n        <Input name=\"reason\" label=\"Motivo\" type=\"text\" id=\"reason\" ></Input>\r\n        <br/>\r\n        <br/>\r\n        <Input name=\"price\" label=\"Valor\" type=\"text\" id=\"price\" ></Input>\r\n      </div>\r\n      <div className=\"container-buttons\">\r\n        <Button onClick={() => ''} backgroundColor={'#EF7C7C'} hoverColor={'#FAA4A4'}>\r\n          Excluir\r\n        </Button>\r\n        <Button cssProps={{ propertie: 'padding-left', value: 20 } } onClick={() => ''} backgroundColor={'#32DE82'} hoverColor={'#5BE69B'}>\r\n          Salvar\r\n        </Button>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default New;\r\n","C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\components\\input\\input.tsx",[],"C:\\Users\\Evandro Neris\\Desktop\\register-debtores\\src\\styles\\s.input.tsx",[],{"ruleId":"104","severity":1,"message":"105","line":13,"column":38,"nodeType":"106","messageId":"107","endLine":13,"endColumn":41,"suggestions":"108"},{"ruleId":"104","severity":1,"message":"105","line":16,"column":42,"nodeType":"106","messageId":"107","endLine":16,"endColumn":45,"suggestions":"109"},{"ruleId":"104","severity":1,"message":"105","line":20,"column":33,"nodeType":"106","messageId":"107","endLine":20,"endColumn":36,"suggestions":"110"},{"ruleId":"104","severity":1,"message":"105","line":5,"column":35,"nodeType":"106","messageId":"107","endLine":5,"endColumn":38,"suggestions":"111"},{"ruleId":"104","severity":1,"message":"105","line":10,"column":48,"nodeType":"106","messageId":"107","endLine":10,"endColumn":51,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":18},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["117","118"],["119","120"],["121","122"],["123","124"],["125","126"],"@typescript-eslint/no-unused-vars","'property' is defined but never used.","Identifier","unusedVar",{"messageId":"127","fix":"128","desc":"129"},{"messageId":"130","fix":"131","desc":"132"},{"messageId":"127","fix":"133","desc":"129"},{"messageId":"130","fix":"134","desc":"132"},{"messageId":"127","fix":"135","desc":"129"},{"messageId":"130","fix":"136","desc":"132"},{"messageId":"127","fix":"137","desc":"129"},{"messageId":"130","fix":"138","desc":"132"},{"messageId":"127","fix":"139","desc":"129"},{"messageId":"130","fix":"140","desc":"132"},"suggestUnknown",{"range":"141","text":"142"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"141","text":"143"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"144","text":"142"},{"range":"144","text":"143"},{"range":"145","text":"142"},{"range":"145","text":"143"},{"range":"146","text":"142"},{"range":"146","text":"143"},{"range":"147","text":"142"},{"range":"147","text":"143"},[557,560],"unknown","never",[751,754],[464,467],[118,121],[255,258]]